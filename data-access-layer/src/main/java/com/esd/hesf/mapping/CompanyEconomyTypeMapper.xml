<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.hesf.dao.CompanyEconomyTypeDao">

	<!-- return resultMap, usually used in join query -->
	<resultMap id="BaseResultMap" type="com.esd.hesf.model.CompanyEconomyType">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="company_economy_type" property="companyEconomyType"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="is_active" jdbcType="BIT" property="isActive" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="version" jdbcType="INTEGER" property="version" />
	</resultMap>

	<sql id="Base_Column_List">
		id, company_economy_type, create_time, update_time, is_active, user_id, version
	</sql>

	<!-- insert -->
	<!-- 使用数据库设定的自增id useGeneratedKeys="true" keyProperty="id" -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.esd.hesf.model.CompanyEconomyType">
		<!-- 返回新保存的这条数据的id,在保存后,用保存前对象.getId()得到 -->
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into company_economy_type (company_economy_type, create_time,
		update_time, is_active, user_id, version)
		values (#{companyEconomyType,jdbcType=VARCHAR},
		now(),now(), default, #{userId,jdbcType=INTEGER}, default)
	</insert>

	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.esd.hesf.model.CompanyEconomyType">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into company_economy_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="companyEconomyType != null">
				company_economy_type,
			</if>
			create_time,update_time,
			<if test="isActive != null">
				is_active,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			version
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="companyEconomyType != null">
				#{companyEconomyType,jdbcType=VARCHAR},
			</if>
			now(),now(),
			<if test="isActive != null">
				#{isActive,jdbcType=BIT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			default
		</trim>
	</insert>

	<!-- delete -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		company_economy_type
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<!-- update -->
	<update id="updateByPrimaryKey" parameterType="com.esd.hesf.model.CompanyEconomyType">
		update company_economy_type
		<set>
			<if test="companyEconomyType != null">
				company_economy_type = #{companyEconomyType,jdbcType=VARCHAR},
			</if>
			update_time = now(),
			<if test="isActive != null">
				is_active = #{isActive,jdbcType=BIT},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			version = version + 1
		</set>
		where id = #{id,jdbcType=INTEGER} and version = #{version}
	</update>

	<!-- retrieve -->
	<select id="retrieveByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from company_economy_type
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="retrieveByPage" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from company_economy_type
		<trim prefix="where" prefixOverrides="and|or">
			<if test="companyEconomyType != null">
				<if test="companyEconomyType.companyEconomyType != null and companyEconomyType.companyEconomyType != ''">
					companyEconomyType = #{companyEconomyType.companyEconomyType}
				</if>
				<if test="companyEconomyType.userId != null and companyEconomyType.userId > 0">
					and user_id = #{companyType.userId}
				</if>
				<if test="companyEconomyType.isActive != null">
					and is_active = #{companyType.isActive}
				</if>
			</if>
		</trim>
		limit #{start}, #{size}
	</select>

	<select id="retrieveCount" resultType="int" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from company_economy_type
		<trim prefix="where" prefixOverrides="and|or">
			<if test="companyEconomyType != null">
				<if test="companyEconomyType.companyEconomyType != null and companyEconomyType.companyEconomyType != ''">
					companyEconomyType = #{companyEconomyType.companyEconomyType}
				</if>
				<if test="companyEconomyType.userId != null and companyEconomyType.userId > 0">
					and user_id = #{companyEconomyType.userId}
				</if>
				<if test="companyEconomyType.isActive != null">
					and is_active = #{companyEconomyType.isActive}
				</if>
			</if>
		</trim>
		limit #{start}, #{size}
	</select>

</mapper>