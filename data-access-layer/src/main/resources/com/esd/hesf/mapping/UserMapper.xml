<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.hesf.dao.UserDao">

	<resultMap id="BaseResultMap" type="com.esd.hesf.model.User">
		<id column="u_id" property="id" jdbcType="INTEGER" />
		<result column="u_user_name" property="userName" jdbcType="VARCHAR" />
		<result column="u_user_real_name" property="userRealName" jdbcType="VARCHAR" />
		<result column="u_user_password" property="userPassword" jdbcType="VARCHAR" />
		<result column="u_user_email" property="userEmail" jdbcType="VARCHAR" />
		<result column="u_user_mobile" property="userMobile" jdbcType="VARCHAR" />
		<result column="u_user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="u_user_status" property="userStatus" jdbcType="BIT" />
		<result column="u_user_remark" property="userRemark" jdbcType="VARCHAR" />
		<result column="u_create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="u_update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="u_user_id" property="userId" jdbcType="INTEGER" />
		<result column="u_is_active" property="isActive" jdbcType="BIT" />
		<result column="u_version" property="version" jdbcType="INTEGER" />
		<association property="userGroup" javaType="com.esd.hesf.model.UserGroup" resultMap="ResultUserGroup" />
	</resultMap>
	
	<resultMap id="ResultUserGroup" type="com.esd.hesf.model.UserGroup">
		<id column="ug_id" property="id" jdbcType="INTEGER" />
		<result column="ug_user_group_name" property="userGroupName" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		u.id as u_id, u.user_name as u_user_name, u.user_real_name as u_user_real_name, u.user_password as u_user_password, u.user_email as u_user_email, u.user_mobile as u_user_mobile, 
		u.user_phone as u_user_phone, u.user_status as u_user_status, u.user_remark as u_user_remark, u.create_time as u_create_time, u.update_time as u_update_time,
		u.user_id as u_user_id, u.is_active as u_is_active, u.version as u_version, 
		ug.id as ug_id, ug.user_group_name as ug_user_group_name
	</sql>
	
	<!-- insert -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.esd.hesf.model.User">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user (user_name, user_real_name, user_password,
		user_email, user_mobile, user_phone,
		user_group_id, user_status, user_remark,
		create_time, update_time, user_id, is_active, version)
		values (#{userName,jdbcType=VARCHAR}, #{userRealName, jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
		#{userEmail,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR},
		#{userGroup.id,jdbcType=INTEGER}, #{userStatus,jdbcType=BIT},
		#{userRemark,jdbcType=VARCHAR},
		now(),now(), #{userId,jdbcType=INTEGER},
		default, default)
	</insert>
	
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.esd.hesf.model.User">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userName != null">
				user_name,
			</if>
			<if test="userRealName != null">
				user_real_name,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="userEmail != null">
				user_email,
			</if>
			<if test="userMobile != null">
				user_mobile,
			</if>
			<if test="userPhone != null">
				user_phone,
			</if>
			<if test="userGroup != null">
				<if test="userGroup.id != null and userGroup.id > 0">
					user_group_id,
				</if>
			</if>
			<if test="userStatus != null">
				user_status,
			</if>
			<if test="userRemark != null">
				user_remark,
			</if>
			create_time, update_time,
			<if test="userId != null">
				user_id,
			</if>
			<if test="isActive != null">
				is_active, 
			</if>
			version
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userRealName != null">
				#{userRealName,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userEmail != null">
				#{userEmail,jdbcType=VARCHAR},
			</if>
			<if test="userMobile != null">
				#{userMobile,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				#{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="userGroup != null">
				<if test="userGroup.id != null and userGroup.id > 0">
					#{userGroup.id,jdbcType=INTEGER},
				</if>
			</if>
			<if test="userStatus != null">
				#{userStatus,jdbcType=BIT},
			</if>
			<if test="userRemark != null">
				#{userRemark,jdbcType=VARCHAR},
			</if>
			now(),now(),
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="isActive != null"> 
				#{isActive,jdbcType=BIT},
			</if>
			default
		</trim>
	</insert>
	
	<!-- delete -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<!-- update -->
	<update id="updateByPrimaryKey" parameterType="com.esd.hesf.model.User">
		update user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userRealName != null">
				user_real_name = #{userRealName,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userEmail != null">
				user_email = #{userEmail,jdbcType=VARCHAR},
			</if>
			<if test="userMobile != null">
				user_mobile = #{userMobile,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				user_phone = #{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="userGroup != null">
				<if test="userGroup.id != null and userGroup.id > 0">
					user_group_id = #{userGroup.id,jdbcType=INTEGER},
				</if>
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=BIT},
			</if>
			<if test="userRemark != null">
				user_remark = #{userRemark,jdbcType=VARCHAR},
			</if>
			update_time = now(),
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="isActive != null">
				is_active = #{isActive,jdbcType=BIT},
			</if>
			version = version + 1 
		</set>
		where id = #{id,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER}
	</update>

	<!-- retrieve -->	
	<select id="retrieveByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user as u, user_group as ug 
		where u.user_group_id = ug.id and u.id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="retrieveByPage" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from user as u, user_group as ug 
		<trim prefix="where" prefixOverrides="and|or">
			u.user_group_id = ug.id
			<if test="user != null">
				<if test="user.userName != null and user.userName != ''">
					and u.user_name like concat('%',#{user.userName},'%')
				</if>
				<if test="user.userRealName != null and user.userRealName != ''">
					and u.user_real_name like concat('%',#{user.userRealName},'%')
				</if>
				<if test="user.userEmail != null and user.userEmail != ''">
					and u.user_email like concat('%',#{user.userEmail},'%')
				</if>
				<if test="user.userMobile != null and user.userMobile != ''">
					and u.user_mobile = #{user.userMobile} 
				</if>
				<if test="user.userPhone != null and user.userPhone != ''">
					and u.user_phone #{user.userPhone} 
				</if>
				<if test="user.userGroup != null">
					<if test="user.userGroup.id != null  and user.userGroup.id > 0">
						and u.user_group_id = #{user.userGroup.id} 
					</if>
				</if>
				<if test="user.userStatus != null">
					and u.user_status = #{user.userStatus}
				</if>
				<if test="user.isActive != null">
					and u.is_active = #{user.isActive,jdbcType=BIT}
				</if>
			</if>
		</trim>
		order by u.create_time desc 
		limit #{start}, #{size}
	</select>

	<select id="retrieveCount" resultType="java.lang.Integer" parameterType="map">
		select count(*) 
		from user as u, user_group as ug 
		<trim prefix="where" prefixOverrides="and|or">
			u.user_group_id = ug.id
			<if test="user != null">
				<if test="user.userName != null and user.userName != ''">
					and u.user_name like concat('%',#{user.userName},'%')
				</if>
				<if test="user.userRealName != null and user.userRealName != ''">
					and u.user_real_name like concat('%',#{user.userRealName},'%')
				</if>
				<if test="user.userEmail != null and user.userEmail != ''">
					and u.user_email like concat('%',#{user.userEmail},'%')
				</if>
				<if test="user.userMobile != null and user.userMobile != ''">
					and u.user_mobile = #{user.userMobile} 
				</if>
				<if test="user.userPhone != null and user.userPhone != ''">
					and u.user_phone #{user.userPhone} 
				</if>
				<if test="user.userGroup != null and user.userGroup != ''">
					<if test="user.userGroup.id != null  and user.userGroup.id > 0">
						and u.user_group_id = #{user.userGroup.id} 
					</if>
				</if>
				<if test="user.userStatus != null">
					and u.user_status = #{user.userStatus}
				</if>
				<if test="user.isActive != null">
					and u.is_active = #{user.isActive,jdbcType=BIT}
				</if>
			</if>
		</trim>
	</select>

	<select id="retrieveByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user as u, user_group as ug 
		where u.user_group_id = ug.id and u.user_name = #{userName,jdbcType=VARCHAR}
	</select>
	
	<select id="retrieveByUserMobile" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user as u, user_group as ug 
		where u.user_group_id = ug.id and u.user_mobile = #{userMobile,jdbcType=VARCHAR}
	</select>
	
	<select id="retrieveByRealName" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user as u, user_group as ug 
		where u.user_group_id = ug.id and u.user_real_name = #{realName,jdbcType=VARCHAR}
	</select>
</mapper>