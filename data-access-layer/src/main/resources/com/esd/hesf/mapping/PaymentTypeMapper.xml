<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esd.hesf.dao.PaymentTypeDao">

	<resultMap id="BaseResultMap" type="com.esd.hesf.model.PaymentType">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="text" jdbcType="VARCHAR" property="text" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="is_active" jdbcType="BIT" property="isActive" />
	</resultMap>

	<sql id="Base_Column_List">
		id, text, create_time, update_time, user_id, is_active
	</sql>

	<!-- insert -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.esd.hesf.model.PaymentType">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into payment_type (text, create_time, update_time, user_id, is_active )
		values (#{text,jdbcType=VARCHAR},now(),now(), #{userId,jdbcType=INTEGER}, #{isActive,jdbcType=BIT} )
	</insert>
	
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.esd.hesf.model.PaymentType">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into payment_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="text != null">
				text,
			</if>
			create_time, update_time,
			<if test="userId != null">
				user_id,
			</if>
			<if test="isActive != null">
				is_active
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="text != null">
				#{text,jdbcType=VARCHAR},
			</if>
			now(),now(),
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="isActive != null">
				#{isActive,jdbcType=BIT}
			</if>
		</trim>
	</insert>

	<!-- delete -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from payment_type
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<!-- update -->
	<update id="updateByPrimaryKey" parameterType="com.esd.hesf.model.PaymentType">
		update payment_type
		<set>
			<if test="text != null">
				text = #{text,jdbcType=VARCHAR},
			</if>
			update_time = now(),
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="isActive != null">
				is_active = #{isActive,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- retireve -->
	<select id="retrieveByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from payment_type
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="retrieveByPage" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from payment_type
		<trim prefix="where" prefixOverrides="and|or">
			<if test="paymentType != null">
				<if test="paymentType.text != null and paymentType != ''">
					text like concat('%',#{paymentType.text,jdbcType=VARCHAR},'%')
				</if>
				<choose>
					<when test="paymentType.isActive != null">
						and is_active = #{paymentType.isActive,jdbcType=BIT}
					</when>
					<otherwise>
						and is_active = 0
					</otherwise>
				</choose>
			</if>
			<choose>
				<when test="paymentType != null">
					<if test="paymentType.isActive != null">
					</if>
				</when>
				<otherwise>
					and is_active = 0
				</otherwise>
			</choose>
		</trim>
		limit #{start},#{size} 
	</select>

	<select id="retrieveCount" parameterType="map" resultType="int">
		select count(*)
		from payment_type
		<trim prefix="where" prefixOverrides="and|or">
			<if test="paymentType != null">
				<if test="paymentType.text != null and paymentType != ''">
					text like concat('%',#{paymentType.text,jdbcType=VARCHAR},'%')
				</if>
				<choose>
					<when test="paymentType.isActive != null">
						and is_active = #{paymentType.isActive,jdbcType=BIT}
					</when>
					<otherwise>
						and is_active = 0
					</otherwise>
				</choose>
			</if>
			<choose>
				<when test="paymentType != null">
					<if test="paymentType.isActive != null">
					</if>
				</when>
				<otherwise>
					and is_active = 0
				</otherwise>
			</choose>
		</trim>
	</select>

</mapper>