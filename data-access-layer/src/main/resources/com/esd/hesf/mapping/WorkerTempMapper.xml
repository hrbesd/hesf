<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esd.hesf.dao.WorkerTempDao">

	<!-- result of worker -->
	<resultMap id="ResultWorker" type="com.esd.hesf.model.WorkerTemp">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="company_id" jdbcType="INTEGER" property="companyId" />
		<result column="worker_name" jdbcType="VARCHAR" property="workerName" />
		<result column="worker_gender" jdbcType="VARCHAR" property="workerGender" />
		<result column="worker_birth" jdbcType="VARCHAR" property="workerBirth" />
		<result column="worker_birth_year" jdbcType="CHAR" property="workerBirthYear" />
		<result column="worker_id_card" jdbcType="VARCHAR" property="workerIdCard" />
		<result column="worker_handicap_code" jdbcType="VARCHAR" property="workerHandicapCode" />
		<result column="worker_handicap_type" jdbcType="INTEGER" property="workerHandicapType" />
		<result column="worker_handicap_level" jdbcType="INTEGER" property="workerHandicapLevel" />
		<result column="current_job" jdbcType="VARCHAR" property="currentJob" />
		<result column="career_card" jdbcType="VARCHAR" property="careerCard" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="is_ok" jdbcType="BIT" property="isOk" />
		<result column="is_cadre" jdbcType="BIT" property="isCadre" />
		<result column="is_professor" jdbcType="BIT" property="isProfessor" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="check_code" jdbcType="VARCHAR" property="checkCode" />
		<result column="pre_id" jdbcType="INTEGER" property="preId" />
		<result column="pic_title" jdbcType="VARCHAR" property="picTitle" />
		<result column="salary" jdbcType="DECIMAL" property="salary" />
 		<result column="pension_insurance" jdbcType="DECIMAL" property="pensionInsurance" />
	</resultMap>

	<sql id="Base_Column_List">
		<!-- worker -->
		id, company_id, worker_name, worker_gender, worker_birth, worker_birth_year, 
		worker_id_card, worker_handicap_code, worker_handicap_type, worker_handicap_level,
		current_job,career_card,  phone, is_ok, is_cadre, is_professor, remark, user_id,
		check_code, pre_id, pic_title, salary, pension_insurance
	</sql>

	<!-- insert -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.esd.hesf.model.WorkerTemp">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into worker_temp (company_id, worker_name, worker_gender, worker_birth, worker_birth_year, 
		worker_id_card, worker_handicap_code, worker_handicap_type, worker_handicap_level,
		current_job,career_card,  phone, is_ok, is_cadre, is_professor, remark, user_id,
		check_code, pre_id,pic_title, pic, salary, pension_insurance)
		values (#{companyId, jdbcType=INTEGER}, #{workerName,jdbcType=VARCHAR}, #{workerGender,jdbcType=VARCHAR},
		#{workerBirth,jdbcType=VARCHAR}, #{workerBirthYear,jdbcType=CHAR},
		#{workerIdCard,jdbcType=VARCHAR}, #{workerHandicapCode,jdbcType=VARCHAR},
		#{workerHandicapType,jdbcType=INTEGER}, #{workerHandicapLevel,jdbcType=INTEGER},#{currentJob, jdbcType=VARCHAR},
		#{careerCard, jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{isOk, jdbcType=BIT},#{isCadre, jdbcType=BIT}, 
		#{isProfessor, jdbcType=BIT},
		#{remark,jdbcType=VARCHAR}, #{userId, jdbcType=INTEGER}, #{checkCode,jdbcType=VARCHAR}, #{preId, jdbcType=INTEGER}
		, #{picTitle, jdbcType=VARCHAR}, #{pic, jdbcType=BLOB}, #{salary, jdbcType=DECIMAL}, #{pensionInsurance, jdbcType=DECIMAL})
	</insert>

	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.esd.hesf.model.WorkerTemp">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into worker_temp
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="companyId != null">
				company_id,
			</if>
			<if test="workerName != null">
				worker_name,
			</if>
			<if test="workerGender != null">
				worker_gender,
			</if>
			<if test="workerBirth != null">
				worker_birth,
			</if>
			<if test="workerBirthYear != null">
				worker_birth_year,
			</if>
			<if test="workerIdCard != null">
				worker_id_card,
			</if>
			<if test="workerHandicapCode != null">
				worker_handicap_code,
			</if>
			<if test="workerHandicapType != null">
				worker_handicap_type,
			</if>
			<if test="workerHandicapLevel != null">
				worker_handicap_level,
			</if>
			<if test="currentJob != null">
				current_job,
			</if>
			<if test="careerCard != null">
				career_card,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="isOk != null">
				is_ok,
			</if>
			<if test="isCadre != null">
				is_cadre,
			</if>
			<if test="isProfessor != null">
				is_professor,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="checkCode != null">
				check_code,
			</if>
			<if test="preId != null">
				pre_id,
			</if>
			<if test="picTitle != null">
				pic_title,
			</if>
			<if test="pic != null">
				pic,
			</if>
			<if test="salary != null">
				salary,
			</if>
			<if test="pensionInsurance != null">
				pension_insurance
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="companyId != null">
				#{companyId,jdbcType=INTEGER},
			</if>
			<if test="workerName != null">
				#{workerName,jdbcType=VARCHAR},
			</if>
			<if test="workerGender != null">
				#{workerGender,jdbcType=VARCHAR},
			</if>
			<if test="workerBirth != null">
				#{workerBirth,jdbcType=VARCHAR},
			</if>
			<if test="workerBirthYear != null">
				#{workerBirthYear,jdbcType=CHAR},
			</if>
			<if test="workerIdCard != null">
				#{workerIdCard,jdbcType=VARCHAR},
			</if>
			<if test="workerHandicapCode != null">
				#{workerHandicapCode,jdbcType=VARCHAR},
			</if>
			<if test="workerHandicapType != null">
				#{workerHandicapType,jdbcType=INTEGER},
			</if>
			<if test="workerHandicapLevel != null">
				#{workerHandicapLevel,jdbcType=INTEGER},
			</if>
			<if test="currentJob != null">
				#{currentJob,jdbcType=VARCHAR},
			</if>
			<if test="careerCard != null">
				#{careerCard,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone, jdbcType=VARCHAR},
			</if>
			<if test="isOk != null">
				#{isOk,jdbcType=BIT},
			</if>
			<if test="isCadre != null">
				#{isCadre,jdbcType=BIT},
			</if>
			<if test="isProfessor != null">
				#{isProfessor,jdbcType=BIT},
			</if>
			<if test="remark != null">
				#{remark, jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId, jdbcType=INTEGER},
			</if>
			<if test="checkCode != null">
				#{checkCode, jdbcType=VARCHAR},
			</if>
			<if test="preId != null">
				#{preId, jdbcType=INTEGER},
			</if>
			<if test="picTitle != null">
				#{picTitle, jdbcType=VARCHAR},
			</if>
			<if test="pic != null">
				#{pic, jdbcType=BLOB},
			</if>
			<if test="salary != null">
				#{salary, jdbcType=DECIMAL},
			</if>
			<if test="pensionInsurance != null">
				#{pensionInsurance, jdbcType=DECIMAL}
			</if>
		</trim>
	</insert>
	
	<!-- delete -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from worker_temp 
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteByUserId" parameterType="java.lang.Integer">
		delete from worker_temp 
		where user_id = #{user_id,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteByCompanyId" parameterType="java.lang.Integer">
		delete from worker_temp 
		where company_id = #{user_id,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteByWorkerIdCard" parameterType="java.lang.String">
		delete from worker_temp 
		where worker_id_card = #{workerIdCard,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteAllData">
		delete from worker_temp;
	</delete>
	
	<!-- update -->
	<update id="updateByPrimaryKey" parameterType="com.esd.hesf.model.WorkerTemp">
		update worker_temp
		<set>
			<if test="companyId != null">
				company_id = #{companyId,jdbcType=INTEGER},
			</if>
			<if test="workerName != null">
				worker_name = #{workerName,jdbcType=VARCHAR},
			</if>
			<if test="workerGender != null">
				worker_gender = #{workerGender,jdbcType=VARCHAR},
			</if>
			<if test="workerBirth != null">
				worker_birth = #{workerBirth,jdbcType=VARCHAR},
			</if>
			<if test="workerBirthYear != null">
				worker_birth_year = #{workerBirthYear,jdbcType=VARCHAR},
			</if>
			<if test="workerIdCard != null">
				worker_id_card = #{workerIdCard,jdbcType=VARCHAR},
			</if>
			<if test="workerHandicapCode != null">
				worker_handicap_code = #{workerHandicapCode,jdbcType=VARCHAR},
			</if>
			<if test="workerHandicapType != null">
				worker_handicap_type = #{workerHandicapType,jdbcType=INTEGER},
			</if>
			<if test="workerHandicapLevel != null">
				worker_handicap_level = #{workerHandicapLevel,jdbcType=INTEGER},
			</if>
			<if test="currentJob != null">
				current_job = #{currentJob,jdbcType=VARCHAR},
			</if>
			<if test="careerCard != null">
				career_card = #{careerCard,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone, jdbcType=VARCHAR},
			</if>
			<if test="isOk != null">
				is_ok = #{isOk,jdbcType=BIT},
			</if>
			<if test="isCadre != null">
				is_cadre = #{isCadre,jdbcType=BIT},
			</if>
			<if test="isProfessor != null">
				is_professor = #{isProfessor,jdbcType=BIT},
			</if>
			<if test="remark != null">
				remark = #{remark, jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId, jdbcType=INTEGER},
			</if>
			<if test="checkCode != null">
				check_code = #{checkCode, jdbcType=VARCHAR},
			</if>
			<if test="preId != null">
				pre_id = #{preId, jdbcType=INTEGER},
			</if>
			<if test="picTitle != null">
				pic_title = #{picTitle, jdbcType=VARCHAR},
			</if>
			<if test="pic != null">
				pic = #{pic, jdbcType=BLOB},
			</if>
			<if test="salary != null">
				salary = #{salary, jdbcType=DECIMAL},
			</if>
			<if test="pensionInsurance != null">
				pension_insurance = #{pensionInsurance, jdbcType=DECIMAL}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- retrieve -->
	<select id="retrieveByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultWorker">
		select
		 <include refid="Base_Column_List" />
		from worker_temp 
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- retrieve -->
	<select id="retrieveByWorkerIdCard" parameterType="java.lang.Integer"
		resultMap="ResultWorker">
		select
		 <include refid="Base_Column_List" />
		from worker_temp 
		where worker_id_card = #{worker_id_card,jdbcType=INTEGER}
	</select>

	<!-- 根据id, 取到图片文件 -->
	<select id="retrievePic" parameterType="int" resultType="java.util.HashMap">
		select pic_title,pic
		from worker_temp
		where id = #{id, jdbcType=INTEGER}
	</select>
	
	<select id="retrieveByCheck" parameterType="map" resultMap="ResultWorker">
		select
			<include refid="Base_Column_List" />
		from worker_temp
		<where>
			<if test="workerTemp != null">
				<if test="workerTemp.isOk != null">
					is_ok = #{workerTemp.isOk, jdbcType=BIT}
				</if>
				<if test="workerTemp.userId != null">
					and user_id = #{workerTemp.userId, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.checkCode != null">
					and check_code = #{workerTemp.checkCode, jdbcType=VARCHAR}
				</if>
			</if>
		</where>
		limit 0,99999999
	</select>

	<select id="retrieveCountByCheck" parameterType="map" resultType="int">
		select count(*)
		from worker_temp
		<where>
			<if test="workerTemp != null">
				<if test="workerTemp.isOk != null">
					is_ok = #{workerTemp.isOk, jdbcType=BIT}
				</if>
				<if test="workerTemp.userId != null">
					and user_id = #{workerTemp.userId, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.checkCode != null">
					and check_code = #{workerTemp.checkCode, jdbcType=VARCHAR}
				</if>
			</if>
		</where>
	</select>

	<select id="retrieveByPage" parameterType="map" resultMap="ResultWorker">
		select
		<include refid="Base_Column_List" />
		from worker_temp 
		<where>
			<if test="workerTemp != null">
				<if test="workerTemp.companyId != null">
					company_id = #{workerTemp.companyId, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.workerName != null">
					and worker_name like concat('%', #{workerTemp.workerName, jdbcType=VARCHAR},'%') 
				</if>
				<if test="workerTemp.workerGender != null">
					and worker_gender = #{workerTemp.workerGender, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.workerBirth != null">
					and worker_birth = #{workerTemp.workerBirth, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.workerBirthYear != null">
					and worker_birth_year = #{workerTemp.workerBirthYear, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.workerIdCard != null">
					and worker_id_card = #{workerTemp.workerIdCard, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.workerHandicapCode != null">
					and worker_handicap_code like concat('%', #{workerTemp.workerHandicapCode, jdbcType=VARCHAR},'%') 
				</if>
				<if test="workerTemp.workerHandicapType != null and workerTemp.workerHandicapType > 0">
					worker_handicap_type = #{workerTemp.workerHandicapType, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.workerHandicapLevel != null and workerTemp.workerHandicapLevel > 0">
					worker_handicap_level = #{workerTemp.workerHandicapLevel, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.currentJob != null">
					and current_job = #{workerTemp.currentJob, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.careerCard != null">
					and career_card = #{workerTemp.careerCard, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.phone != null">
					and phone = #{workerTemp.phone, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.isOk != null">
					and is_ok = #{workerTemp.isOk, jdbcType=BIT}
				</if>
				<if test="workerTemp.isCadre != null">
					and is_cadre = #{workerTemp.isCadre, jdbcType=BIT}
				</if>
				<if test="remark != null">
					and remark = #{workerTemp.remark, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.userId != null and workerTemp.userId > 0">
					and user_id = #{workerTemp.userId, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.checkCode != null">
					and check_code = #{workerTemp.checkCode, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.preId != null and workerTemp.preId > 0">
					and pre_id = #{workerTemp.preId, jdbcType=INTEGER}
				</if>
			</if>
		</where>
		order by id
		limit #{start}, #{size}
	</select>

	<select id="retrieveCount" parameterType="map" resultType="int">
		select count(*)
		from worker_temp 
		<where>
			<if test="workerTemp != null">
				<if test="workerTemp.companyId != null">
					company_id = #{workerTemp.companyId, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.workerName != null">
					and worker_name like concat('%', #{workerTemp.workerName, jdbcType=VARCHAR},'%') 
				</if>
				<if test="workerTemp.workerGender != null">
					and worker_gender = #{workerTemp.workerGender, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.workerBirth != null">
					and worker_birth = #{workerTemp.workerBirth, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.workerBirthYear != null">
					and worker_birth_year = #{workerTemp.workerBirthYear, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.workerIdCard != null">
					and worker_id_card = #{workerTemp.workerIdCard, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.workerHandicapCode != null">
					and worker_handicap_code like concat('%', #{workerTemp.workerHandicapCode, jdbcType=VARCHAR},'%') 
				</if>
				<if test="workerTemp.workerHandicapType != null and workerTemp.workerHandicapType > 0">
					worker_handicap_type = #{workerTemp.workerHandicapType, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.workerHandicapLevel != null and workerTemp.workerHandicapLevel > 0">
					worker_handicap_level = #{workerTemp.workerHandicapLevel, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.currentJob != null">
					and current_job = #{workerTemp.currentJob, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.careerCard != null">
					and career_card = #{workerTemp.careerCard, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.phone != null">
					and phone = #{workerTemp.phone, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.isOk != null">
					and is_ok = #{workerTemp.isOk, jdbcType=BIT}
				</if>
				<if test="workerTemp.isCadre != null">
					and is_cadre = #{workerTemp.isCadre, jdbcType=BIT}
				</if>
				<if test="remark != null">
					and remark = #{workerTemp.remark, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.userId != null and workerTemp.userId > 0">
					and user_id = #{workerTemp.userId, jdbcType=INTEGER}
				</if>
				<if test="workerTemp.checkCode != null">
					and check_code = #{workerTemp.checkCode, jdbcType=VARCHAR}
				</if>
				<if test="workerTemp.preId != null and workerTemp.preId > 0">
					and pre_id = #{workerTemp.preId, jdbcType=INTEGER}
				</if>
			</if>
		</where>
	</select>
	
	<select id="retrieveCountByworkerIdCard" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*)
		from worker_temp 
		where worker_id_card = #{workerIdCard,jdbcType=VARCHAR}
	</select>
	
	<select id="retrieveByMultiConditions" parameterType="map" resultMap="ResultWorker">
		select
			<include refid="Base_Column_List" />
		from worker_temp
		<where>
			<!-- retired age judge -->
			<if test="isCadre != null">
				is_cadre = #{isCadre,jdbcType=BIT} 
			</if>
			<!-- validate age -->
			<if test="maxMaleBirth != null and maxMaleCadreBirth != null and maxFemaleBirth != null and maxFemaleCadreBirth != null">
				and (worker_birth_year &lt;= #{maxMaleBirth} and worker_gender = 1 and is_cadre = 0) 
					or (worker_birth_year &lt;= #{maxMaleCadreBirth} and worker_gender = 1 and is_cadre = 1)
					or (worker_birth_year &lt;= #{maxFemaleBirth} and worker_gender = 0 and is_cadre = 0)
					or (worker_birth_year &lt;= #{maxFemaleCadreBirth} and worker_gender = 0 and is_cadre = 1)
			</if>
			<if test="companyId != null and companyId >0">
				and company_id = #{companyId, jdbcType=INTEGER}
			</if>
			<if test="workerName != null and workerName != ''">
				and worker_name like concat('%', #{workerName, jdbcType=VARCHAR},'%') 
			</if>
			<if test="workerGender != null and workerGender != ''">
				and worker_gender = #{workerGender, jdbcType=VARCHAR}
			</if>
			<if test="workerHandicapCode != null and workerHandicapCode != ''">
				and worker_handicap_code like concat('%', #{workerHandicapCode, jdbcType=VARCHAR},'%') 
			</if>
			<if test="workerHandicapType != null and workerHandicapType > 0">
				and worker_handicap_type = #{workerHandicapType, jdbcType=INTEGER}
			</if>
			<if test="workerHandicapLevel != null and workerHandicapLevel > 0">
				and worker_handicap_level = #{workerHandicapLevel, jdbcType=INTEGER}
			</if>
			<!-- age scope -->
			<if test="minBirth != null">
				and worker_birth_year &lt;= #{minBirth} 
			</if>
			<if test="maxBirth != null">
				and worker_birth_year &gt;= #{maxBirth} 
			</if>
			<if test="phone != null and phone != ''">
				and phone like concat('%', #{phone, jdbcType=VARCHAR},'%')
			</if>
			<if test="isOk != null">
				and is_ok = #{isOk,jdbcType=BIT} 
			</if>
			<if test="userId != null">
				and user_id = #{userId, jdbcType=INTEGER}
			</if>
			<if test="checkCode != null">
				and check_code = #{checkCode, jdbcType=VARCHAR}
			</if>
			<if test="remark != null and remark != ''">
				and remark = #{remark, jdbcType=VARCHAR}
			</if>
		</where>
		order by id
		limit #{start}, #{size}
	</select>
	
	<select id="retrieveByMultiConditionsCount" parameterType="map" resultType="int">
		select count(*)
		from worker_temp 
		<where>
			<!-- retired age judge -->
			<if test="isCadre != null">
				is_cadre = #{isCadre,jdbcType=BIT} 
			</if>
			<!-- validate age -->
			<if test="maxMaleBirth != null and maxMaleCadreBirth != null and maxFemaleBirth != null and maxFemaleCadreBirth != null">
				and (worker_birth_year &lt;= #{maxMaleBirth} and worker_gender = 1 and is_cadre = 0) 
					or (worker_birth_year &lt;= #{maxMaleCadreBirth} and worker_gender = 1 and is_cadre = 1)
					or (worker_birth_year &lt;= #{maxFemaleBirth} and worker_gender = 0 and is_cadre = 0)
					or (worker_birth_year &lt;= #{maxFemaleCadreBirth} and worker_gender = 0 and is_cadre = 1)
			</if>
			<if test="companyId != null and companyId >0">
				and company_id = #{companyId, jdbcType=INTEGER}
			</if>
			<if test="workerName != null and workerName != ''">
				and worker_name like concat('%', #{workerName, jdbcType=VARCHAR},'%') 
			</if>
			<if test="workerGender != null and workerGender != ''">
				and worker_gender = #{workerGender, jdbcType=VARCHAR}
			</if>
			<if test="workerHandicapCode != null and workerHandicapCode != ''">
				and worker_handicap_code like concat('%', #{workerHandicapCode, jdbcType=VARCHAR},'%') 
			</if>
			<if test="workerHandicapType != null and workerHandicapType > 0">
				and worker_handicap_type = #{workerHandicapType, jdbcType=INTEGER}
			</if>
			<if test="workerHandicapLevel != null and workerHandicapLevel > 0">
				and worker_handicap_level = #{workerHandicapLevel, jdbcType=INTEGER}
			</if>
			<!-- age scope -->
			<if test="minBirth != null">
				and worker_birth_year &lt;= #{minBirth} 
			</if>
			<if test="maxBirth != null">
				and worker_birth_year &gt;= #{maxBirth} 
			</if>
			<if test="phone != null and phone != ''">
				and phone like concat('%', #{phone, jdbcType=VARCHAR},'%')
			</if>
			<if test="isOk != null">
				and is_ok = #{isOk,jdbcType=BIT} 
			</if>
			<if test="userId != null">
				and user_id = #{userId, jdbcType=INTEGER}
			</if>
			<if test="checkCode != null">
				and check_code = #{checkCode, jdbcType=VARCHAR}
			</if>
			<if test="remark != null and remark != ''">
				and remark = #{remark, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
</mapper>