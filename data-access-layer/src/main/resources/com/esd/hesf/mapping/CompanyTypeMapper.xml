<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esd.hesf.dao.CompanyTypeDao">

	<resultMap id="BaseResultMap" type="com.esd.hesf.model.CompanyType">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="company_type" jdbcType="VARCHAR" property="companyType" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="is_active" jdbcType="BIT" property="isActive" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="version" property="version" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		id, company_type, create_time, update_time, is_active, user_id, version
	</sql>

	<!-- insert -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.esd.hesf.model.CompanyType">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into company_type (company_type, create_time,
		update_time, is_active, user_id, version)
		values (#{companyType,jdbcType=VARCHAR}, now(),now(),
		default, #{userId,jdbcType=INTEGER}, default
		)
	</insert>

	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.esd.hesf.model.CompanyType">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into company_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="companyType != null">
				company_type,
			</if>
			create_time, update_time, 
			<if test="isActive != null">
				is_active,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			version
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="companyType != null">
				#{companyType,jdbcType=VARCHAR},
			</if>
			now(),now(),
			<if test="isActive != null">
				#{isActive,jdbcType=BIT}, 
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			default
		</trim>
	</insert>

	<!-- delete -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from company_type
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<!-- update -->
	<update id="updateByPrimaryKey" parameterType="com.esd.hesf.model.CompanyType">
		update company_type
		<set>
			<if test="companyType != null">
				company_type = #{companyType,jdbcType=VARCHAR},
			</if>
			update_time = now(),
			<if test="isActive != null">
				is_active = #{isActive,jdbcType=BIT},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- retrieve -->
	<select id="retrieveByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from company_type
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="retrieveByPage" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from company_type
		<trim prefix="where" prefixOverrides="and|or">
			<if test="companyType != null">
				<if test="companyType.companyType != null and companyType.companyType != ''">
					company_type = #{companyType.companyType}
				</if>
				<if test="companyType.userId != null and companyType.userId > 0">
					and user_id = #{companyType.userId}
				</if>
				<choose>
					<when test="companyType.isActive != null">
							and is_active = #{companyType.isActive,jdbcType=BIT}
					</when>
					<otherwise>
						and is_active = 0
					</otherwise>
				</choose>
			</if>
			<choose>
				<when test="companyType != null">
					<if test="companyType.isActive != null">
					</if>
				</when>
				<otherwise>
					and is_active = 0
				</otherwise>
			</choose>
		</trim>
		order by id
		limit #{start}, #{size}
	</select>

	<select id="retrieveCount" parameterType="map" resultType="int">
		select
		<include refid="Base_Column_List" />
		from company_type
		<trim prefix="where" prefixOverrides="and|or">
			<if test="companyType != null">
				<if test="companyType.companyType != null and companyType.companyType != ''">
					companyType = #{companyType.companyType}
				</if>
				<if test="companyType.userId != null and companyType.userId > 0">
					and user_id = #{companyType.userId}
				</if>
				<choose>
					<when test="companyType.isActive != null">
							and is_active = #{companyType.isActive,jdbcType=BIT}
					</when>
					<otherwise>
						and is_active = 0
					</otherwise>
				</choose>
			</if>
			<choose>
				<when test="companyType != null">
					<if test="companyType.isActive != null">
					</if>
				</when>
				<otherwise>
					and is_active = 0
				</otherwise>
			</choose>
		</trim>
	</select>


	<select id="retrieveTest">
		
	</select>
</mapper>