<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.hesf.dao.AreaDao">

	<resultMap id="BaseResultMap" type="com.esd.hesf.model.Area">
		<id column="code" property="code" jdbcType="CHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="pyname" property="pyname" jdbcType="VARCHAR" />
		<result column="abbr" property="abbr" jdbcType="VARCHAR" />
		<result column="mark" property="mark" jdbcType="VARCHAR" />
		<result column="is_active" property="isActive" jdbcType="BIT" />
	</resultMap>

	<sql id="Base_Column_List">
		code, name, pyname, abbr, mark, is_active
	</sql>

	<!-- insert -->
	<insert id="insert" parameterType="com.esd.hesf.model.Area">
		insert into area (code, name, pyname,
		abbr, mark,is_active)
		values (#{code,jdbcType=CHAR}, #{name,jdbcType=VARCHAR},
		#{pyName,jdbcType=VARCHAR},
		#{abbr,jdbcType=VARCHAR}, #{mark,jdbcType=VARCHAR},default)
	</insert>

	<insert id="insertSelective" parameterType="com.esd.hesf.model.Area">
		insert into area
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="code != null">
				code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="pyName != null">
				pyname,
			</if>
			<if test="abbr != null">
				abbr,
			</if>
			<if test="mark != null">
				mark,
			</if>
			<if test="isActive != null">
				is_active
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="code != null">
				#{code,jdbcType=CHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="pyName != null">
				#{pyName,jdbcType=VARCHAR},
			</if>
			<if test="abbr != null">
				#{abbr,jdbcType=VARCHAR},
			</if>
			<if test="mark != null">
				#{mark,jdbcType=VARCHAR},
			</if>
			<if test="isActive != null">
				#{isActive, jdbcType=BIT}
			</if>
		</trim>
	</insert>

	<!-- delete -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from area
		where code
		= #{code,jdbcType=CHAR}
	</delete>

	<!-- update -->
	<update id="updateByPrimaryKey" parameterType="com.esd.hesf.model.Area">
		update area_back
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="pyName != null">
				pyname = #{pyname,jdbcType=VARCHAR},
			</if>
			<if test="abbr != null">
				abbr = #{abbr,jdbcType=VARCHAR},
			</if>
			<if test="mark != null">
				mark = #{mark,jdbcType=VARCHAR},
			</if>
			<if test="isActive != null">
				is_active = #{isActive, jdbcType=BIT}
			</if>
		</set>
		where code = #{code,jdbcType=CHAR}
	</update>

	<!-- retrieve -->
	<select id="retrieveByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from area
		where code = #{code,jdbcType=CHAR}
	</select>

	<select id="retrieveByPage" resultType="com.esd.hesf.model.Area" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from area
		<trim prefix="where" prefixOverrides="and|or">
			<if test="area != null">
				<if test="area.code != null and area.code != ''">
					code like concat ('%',#{area.code},'%')
				</if>
				<if test="area.name != null and area.name != ''">
					and name like concat('%',#{area.name},'%')
				</if>
				<if test="area.pyName != null and area.pyName != ''">
					and pyname like concat('%',#{area.pyName},'%')
				</if>
				<if test="area.abbr != null and area.abbr != ''">
					and abbr like concat('%',#{area.abbr},'%')
				</if>
			</if>
			<if test="area != null">
				<choose>
					<when test="area.isActive != null">
						is_active = #{area.isActive, jdbcType=BIT}
					</when>
					<otherwise>
						is_active = 0 
					</otherwise>
				</choose>
			</if>
		</trim>
		order by code
		limit #{start}, #{size}
	</select>

	<select id="retrieveCount" resultType="int" parameterType="map">
		select count(*) 
		from area
		<trim prefix="where" prefixOverrides="and|or">
			<if test="area != null">
				<if test="area.code != null and area.code != ''">
					code like concat ('%',#{area.code},'%')
				</if>
				<if test="area.name != null and area.name != ''">
					and name like concat('%',#{area.name},'%')
				</if>
				<if test="area.pyName != null and area.pyName != ''">
					and pyname like concat('%',#{area.pyName},'%')
				</if>
				<if test="area.abbr != null and area.abbr != ''">
					and abbr like concat('%',#{area.abbr},'%')
				</if>
			</if>
			<if test="area != null">
				<choose>
					<when test="area.isActive != null">
						is_active = #{area.isActive, jdbcType=BIT}
					</when>
					<otherwise>
						is_active = 0 
					</otherwise>
				</choose>
			</if>
		</trim>
		limit #{start}, #{size}
	</select>

	<!-- retrieveByCode -->
	<select id="retrieveByCode" parameterType="java.lang.String" resultType="com.esd.hesf.model.Area">
		select 
		<include refid="Base_Column_List" />
		from area
		where code like concat ('%',#{code},'%')
	</select>
	
	<!-- retrieve HLJ -->
	<select id="retrieveHLJ" parameterType="java.lang.String" resultType="com.esd.hesf.model.Area">
		select 
		<include refid="Base_Column_List" />
		from area
		where is_active = 0
		order by code
	</select>

</mapper>