<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esd.hesf.dao.AuditCompanyViewDao">

	<!-- return the audit result with company info -->
	<resultMap id="AuditCompanyViewModel" type="com.esd.hesf.model.Audit">
		<!-- audit -->
		<id column="au_id" jdbcType="INTEGER" property="id" />
		<result column="au_year" jdbcType="CHAR" property="year" />
		<result column="au_company_emp_total" jdbcType="INTEGER" property="companyEmpTotal" />
		<result column="au_company_handicap_total" jdbcType="INTEGER" property="companyHandicapTotal" />
		<result column="au_company_predict_total" jdbcType="INTEGER" property="companyPredictTotal" />
		<result column="au_company_should_total" jdbcType="DECIMAL" property="companyShouldTotal" />
		<result column="au_company_already_total" jdbcType="INTEGER" property="companyAlreadyTotal" />
		<result column="au_amount_payable" jdbcType="DECIMAL" property="amountPayable" />
		<result column="au_reduction_amount" jdbcType="DECIMAL" property="reductionAmount" />
		<result column="au_actual_amount" jdbcType="DECIMAL" property="actualAmount" />
		<result column="au_pay_amount" jdbcType="DECIMAL" property="payAmount" />
		<result column="au_remain_amount" jdbcType="DECIMAL" property="remainAmount" />
		<result column="au_complement_amount" jdbcType="DECIMAL" property="complementAmount" />
		<result column="au_delay_pay_amount" jdbcType="DECIMAL" property="delayPayAmount" />
		<result column="au_is_delay_pay" jdbcType="BIT" property="isDelayPay" />
		<result column="au_init_audit_user_id" jdbcType="INTEGER" property="initAuditUser.id" />
		<result column="au_init_audit_date" jdbcType="TIMESTAMP" property="initAuditDate" />
		<result column="au_init_audit_comment" jdbcType="VARCHAR" property="initAuditComment" />
		<result column="au_verify_audit_user_id" jdbcType="INTEGER" property="verifyAuditUser.id" />
		<result column="au_verify_audit_date" jdbcType="TIMESTAMP" property="verifyAuditDate" />
		<result column="au_verify_audit_comment" jdbcType="VARCHAR" property="verifyAuditComment" />
		<result column="au_remark" jdbcType="VARCHAR" property="remark" />
		<result column="au_is_exempt" jdbcType="BIT" property="isExempt" />
		<result column="au_reduction_type" jdbcType="INTEGER" property="reductionType" />
		<result column="au_reducion_apply_user" jdbcType="VARCHAR" property="reducionApplyUser" />
		<result column="au_reduction_date" jdbcType="TIMESTAMP" property="reductionDate" />
		<result column="au_reduction_reason" jdbcType="VARCHAR" property="reductionReason" />
		<result column="au_reduction_answer_user" jdbcType="VARCHAR" property="reductionAnswerUser" />
		<result column="au_reduction_answer_date" jdbcType="VARCHAR" property="reductionAnswerDate" />
		<result column="au_reduction_answer_option" jdbcType="VARCHAR" property="reductionAnswerOption" />
		<result column="au_reduction_remark" jdbcType="VARCHAR" property="reductionRemark" />
		<result column="au_unaudit_years" jdbcType="INTEGER" property="unauditYears" />
		<result column="au_supplement_year" jdbcType="CHAR" property="supplementYear" />
		<result column="au_delay_days" jdbcType="INTEGER" property="delayDays" />
		<result column="au_refuse_times" jdbcType="INTEGER" property="refuseTimes" />
		<result column="au_create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="au_update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="au_user_id" jdbcType="INTEGER" property="userId" />
		<result column="au_is_active" jdbcType="BIT" property="isActive" />
		<result column="au_version" jdbcType="INTEGER" property="version" />
		<!-- auditProcessStatus -->
		<result column="au_audit_process_status" jdbcType="INTEGER" property="auditProcessStatus.id" />
		<!-- company -->
		<result column="c_id" jdbcType="INTEGER" property="company.id" />
		<result column="c_company_code" jdbcType="VARCHAR" property="company.companyCode" />
		<result column="c_company_management" jdbcType="VARCHAR" property="company.companyManagement" />
		<result column="c_company_name" jdbcType="VARCHAR" property="company.companyName" />
		<result column="c_company_legal" jdbcType="VARCHAR" property="company.companyLegal" />
		<result column="c_company_contact_person" jdbcType="VARCHAR" property="company.companyContactPerson" />
		<result column="c_company_organization_code" jdbcType="VARCHAR"
			property="company.companyOrganizationCode" />
		<result column="c_company_tax_code" jdbcType="VARCHAR" property="company.companyTaxCode" />
		<result column="c_company_address" jdbcType="VARCHAR" property="company.companyAddress" />
		<result column="c_company_zip_code" jdbcType="CHAR" property="company.companyZipCode" />
		<result column="c_company_phone" jdbcType="VARCHAR" property="company.companyPhone" />
		<result column="c_company_fax" jdbcType="VARCHAR" property="company.companyFax" />
		<result column="c_company_mobile" jdbcType="VARCHAR" property="company.companyMobile" />
		<result column="c_company_bank" jdbcType="VARCHAR" property="company.companyBank" />
		<result column="c_company_bank_account" jdbcType="VARCHAR" property="company.companyBankAccount" />
		<result column="c_company_remark" jdbcType="VARCHAR" property="company.companyRemark" />
		<result column="c_create_time" jdbcType="TIMESTAMP" property="company.createTime" />
		<result column="c_update_time" jdbcType="TIMESTAMP" property="company.updateTime" />
		<result column="c_user_id" jdbcType="INTEGER" property="company.userId" />
		<result column="c_is_active" jdbcType="BIT" property="company.isActive" />
		<result column="c_version" jdbcType="INTEGER" property="company.version" />
		<!-- companyType -->
		<result column="c_company_type" jdbcType="INTEGER" property="company.companyType.id" />
		<!-- companyEconomyType -->
		<result column="c_company_economy_type" jdbcType="INTEGER" property="company.companyEconomyType.id" />
		<!-- companyProperty -->
		<result column="c_company_property" jdbcType="INTEGER" property="company.companyProperty.id" />
		<!-- area -->
		<result column="c_area_code" jdbcType="CHAR" property="company.area.code" />
	</resultMap>
	
	<resultMap id="ReportViewModel" type="com.esd.hesf.viewmodels.ReportViewModel">
		<result column="report_name" property="reportName" jdbcType="VARCHAR" />
		<result column="unit_num" property="unitNum" jdbcType="INTEGER" />
		<result column="emp_total" property="empTotal" jdbcType="INTEGER" />
		<result column="predict_total" property="predictTotal" jdbcType="INTEGER" />
		<result column="un_audit" property="unAudit" jdbcType="INTEGER" />
		<result column="un_reaudit" property="unReAudit" jdbcType="INTEGER" />
		<result column="audit_ok" property="auditOk" jdbcType="INTEGER" />
		<result column="unaudit_ok" property="unauditOk" jdbcType="INTEGER" />
		<result column="should_total" property="shouldTotal" jdbcType="DECIMAL" />
		<result column="already_total" property="alreadyTotal" jdbcType="DECIMAL" />
		<result column="less_total" property="lessTotal" jdbcType="DECIMAL" />
		<result column="amount_payable" property="amountPayable" jdbcType="DECIMAL" />
		<result column="reduction_amount" property="reductionAmount" jdbcType="DECIMAL" />
		<result column="actual_amount" property="actualAmount" jdbcType="DECIMAL" />
		<result column="already_amount" property="alreadyAmount" jdbcType="DECIMAL" />
		<result column="t_id" property="companyType" jdbcType="INTEGER" />
		<result column="a_code" property="areaCode" jdbcType="VARCHAR" />
		<result column="et_id" property="companyEconomyType" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="AuditTempModel" type="com.esd.hesf.viewmodels.AuditTempModel">
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="aup_id" property="aupId" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="Base_Column_List">
		c.id as c_id, c.company_code as c_company_code, c.company_management as c_company_management,
				c.company_name as c_company_name, c.company_legal as c_company_legal,
				c.company_contact_person as c_company_contact_person, 
				c.company_organization_code as c_company_organization_code, c.company_tax_code as c_company_tax_code,
				c.company_address as c_company_address, c.company_zip_code as c_company_zip_code, 
				c.company_fax as c_company_fax, 
				c.company_phone as c_company_phone, c.company_mobile as c_company_mobile, 
				c.company_bank as c_company_bank, c.company_bank_account as c_company_bank_account,
				c.company_remark as c_company_remark, c.create_time as c_create_time, 
				c.update_time as c_update_time, c.user_id as c_user_id, c.is_active as c_is_active, c.version as c_version,
				c.company_type as c_company_type, 
				c.company_economy_type as c_company_economy_type,
				c.company_property as c_company_property,
				c.area_code as c_area_code,
		au.id as au_id, au.year as au_year, au.company_emp_total as au_company_emp_total,
				au.company_handicap_total as au_company_handicap_total, au.company_predict_total as au_company_predict_total,
				au.company_should_total as au_company_should_total, au.company_already_total as au_company_already_total, 
				au.amount_payable as au_amount_payable, au.reduction_amount as au_reduction_amount,
				au.actual_amount as au_actual_amount,
				au.pay_amount as au_pay_amount, au.remain_amount as au_remain_amount, 
				au.complement_amount as au_complement_amount, au.delay_pay_amount as au_delay_pay_amount, 
				au.is_delay_pay as au_is_delay_pay, 
				au.init_audit_user_id as au_init_audit_user_id,  au.init_audit_date as au_init_audit_date, 
				au.init_audit_comment as au_init_audit_comment, au.verify_audit_user_id as au_verify_audit_user_id,
				au.verify_audit_date as au_verify_audit_date , au.verify_audit_comment as au_verify_audit_comment,
				au.remark as au_remark, 
				au.is_exempt as au_is_exempt,au.reduction_type as au_reduction_type,
				au.reducion_apply_user as au_reducion_apply_user, 
				au.reduction_date as au_reduction_date, au.reduction_reason as au_reduction_reason,
				au.reduction_answer_user as au_reduction_answer_user, au.reduction_answer_date as au_reduction_answer_date, 
				au.reduction_answer_option as au_reduction_answer_option, au.reduction_remark as au_reduction_remark,
				au.unaudit_years as au_unaudit_years, au.supplement_year as au_supplement_year, 
				au.delay_days as au_delay_days, au.refuse_times as au_refuse_times, 
				au.create_time as au_create_time, au.update_time as au_update_time, au.user_id as au_user_id, 
				au.is_active as au_is_active, au.version as au_version,
			au.audit_process_status as au_audit_process_status
	</sql>

	<select id="retrieveByCompany" parameterType="map" resultMap="AuditCompanyViewModel">
		select
		<include refid="Base_Column_List" />
		from audit as au, company as c
		<trim prefix="where" prefixOverrides="and|or">
			au.company_id = c.id 
			<if test="year != null and year != ''">
				and au.year = #{year,jdbcType=CHAR} 
			</if>
			<if test="companyCode != null and companyCode != ''">
				and c.company_code like concat('%', #{companyCode,jdbcType=VARCHAR},'%')
			</if>
			<if test="companyTaxCode != null and companyTaxCode != ''">
				and c.company_tax_code like concat('%',#{companyTaxCode,jdbcType=VARCHAR},'%')
			</if>
			<if test="companyOrganizationCode != null and companyOrganizationCode != ''">
				and c.company_organization_code like concat('%',#{companyOrganizationCode,jdbcType=VARCHAR},'%')
			</if>
			<if test="companyProperty != null and companyProperty > 0">
				and c.company_property = #{companyProperty,jdbcType=INTEGER} 
			</if>
			<if test="companyEconomyType != null and companyEconomyType > 0">
				and c.company_economy_type = #{companyEconomyType,jdbcType=INTEGER} 
			</if>
			<if test="companyType != null and companyType > 0">
				and c.company_type = #{companyType,jdbcType=INTEGER} 
			</if>
			<if test="areaCode != null and areaCode != ''">
				and c.area_code like concat ('%', #{areaCode,jdbcType=VARCHAR},'%')  
			</if>
			<!-- emp total -->
			<if test="minTotal != null and minTotal > 0">
				and au.company_emp_total &gt;= #{minTotal} 
			</if>
			<if test="maxTotal != null and maxTotal > 0">
				and au.company_emp_total &lt;=  #{maxTotal} 
			</if>
			<if test="minHandicapTotal != null and minHandicapTotal > 0">
				and au.company_handicap_total &gt;= #{minHandicapTotal} 
			</if>
			<if test="maxHandicapTotal != null and maxHandicapTotal > 0">
				and au.company_handicap_total &lt;=  #{maxHandicapTotal} 
			</if>
			<if test="companyName != null and companyName != ''">
				and c.company_name like concat('%',#{companyName,jdbcType=VARCHAR},'%')
			</if>
			<if test="companyAddress != null and companyAddress != ''">
				and c.company_address like concat('%',#{companyAddress,jdbcType=VARCHAR},'%')
			</if>				
			<if test="companyLegal != null and companyLegal != ''">
				and c.company_legal like concat('%',#{companyLegal,jdbcType=VARCHAR},'%')
			</if>
			<if test="auditProcessStatus != null and auditProcessStatus > 0">
				and au.audit_process_status = #{auditProcessStatus,jdbcType=INTEGER} 
			</if>
			<if test="overYear != null and overYear != ''">
				and au.year &lt;= #{overYear}
			</if>
			<if test="isExempt != null">
				and au.is_exempt = #{isExempt,jdbcType=BIT} 
			</if>
			<if test="actualAmount != null">
				and au.actual_amount = #{actualAmount,jdbcType=DECIMAL}
			</if>
			<choose>
				<when test="isActive != null">
					and c.is_active = #{isActive,jdbcType=BIT}
				</when>
				<otherwise>
					and c.is_active = 0
				</otherwise>
			</choose>
		</trim>
		order by c.company_code
		limit #{start},#{size}
	</select>
	
	<select id="retrieveCount" parameterType="map" resultType="java.lang.Integer">
		select count(*) 
		from audit as au, company as c
		<trim prefix="where" prefixOverrides="and|or">
			au.company_id = c.id 
			<if test="year != null and year != ''">
				and au.year = #{year,jdbcType=CHAR} 
			</if>
			<if test="companyCode != null and companyCode != ''">
				and c.company_code like concat('%', #{companyCode,jdbcType=VARCHAR},'%')
			</if>
			<if test="companyTaxCode != null and companyTaxCode != ''">
				and c.company_tax_code like concat('%',#{companyTaxCode,jdbcType=VARCHAR},'%')
			</if>
			<if test="companyOrganizationCode != null and companyOrganizationCode != ''">
				and c.company_organization_code like concat('%',#{companyOrganizationCode,jdbcType=VARCHAR},'%')
			</if>
			<if test="companyProperty != null and companyProperty > 0">
				and c.company_property = #{companyProperty,jdbcType=INTEGER} 
			</if>
			<if test="companyEconomyType != null and companyEconomyType > 0">
				and c.company_economy_type = #{companyEconomyType,jdbcType=INTEGER} 
			</if>
			<if test="companyType != null and companyType > 0">
				and c.company_type = #{companyType,jdbcType=INTEGER} 
			</if>
			<if test="areaCode != null and areaCode != ''">
				and c.area_code like concat ('%', #{areaCode,jdbcType=VARCHAR},'%')  
			</if>
			<!-- emp total -->
			<if test="minTotal != null and minTotal > 0">
				and au.company_emp_total &gt;= #{minTotal} 
			</if>
			<if test="maxTotal != null and maxTotal > 0">
				and au.company_emp_total &lt;=  #{maxTotal} 
			</if>
			<if test="minHandicapTotal != null and minHandicapTotal > 0">
				and au.company_handicap_total &gt;= #{minHandicapTotal} 
			</if>
			<if test="maxHandicapTotal != null and maxHandicapTotal > 0">
				and au.company_handicap_total &lt;=  #{maxHandicapTotal} 
			</if>
			<if test="companyName != null and companyName != ''">
				and c.company_name like concat('%',#{companyName,jdbcType=VARCHAR},'%')
			</if>
			<if test="companyAddress != null and companyAddress != ''">
				and c.company_address like concat('%',#{companyAddress,jdbcType=VARCHAR},'%')
			</if>				
			<if test="companyLegal != null and companyLegal != ''">
				and c.company_legal like concat('%',#{companyLegal,jdbcType=VARCHAR},'%')
			</if>
			<if test="auditProcessStatus != null and auditProcessStatus > 0">
				and au.audit_process_status = #{auditProcessStatus,jdbcType=INTEGER} 
			</if>
			<if test="overYear != null and overYear != ''">
				and au.year &lt;= #{overYear}
			</if>
			<if test="isExempt != null">
				and au.is_exempt = #{isExempt,jdbcType=BIT} 
			</if>
			<if test="actualAmount != null">
				and au.actual_amount = #{actualAmount,jdbcType=DECIMAL}
			</if>
			<choose>
				<when test="isActive != null">
					and c.is_active = #{isActive,jdbcType=BIT}
				</when>
				<otherwise>
					and c.is_active = 0
				</otherwise>
			</choose>
		</trim>
	</select>
	
	<sql id="report_column_list">
		count(*) as unit_num,sum(au.company_emp_total) as emp_total, 
		sum(au.company_should_total) as should_total, sum(au.company_already_total) as already_total,
		sum(au.amount_payable) as amount_payable, sum(au.reduction_amount) as reduction_amount, 
		sum(au.actual_amount) as actual_amount,sum(pay.payment_money)  as already_amount
	</sql>
	
	<select id="retrieveReport" parameterType="map" resultMap="ReportViewModel">
		select	
			<if test="currentSearch != null and currentSearch == 'companyType'">
				t.id as t_id, t.company_type as report_name,
			</if>
			<if test="currentSearch != null and currentSearch == 'companyEconomyType'">
				et.id as et_id, et.company_economy_type as report_name,
			</if>
			<if test="currentSearch != null and currentSearch == 'area'">
				a.code as a_code, a.name as report_name,
			</if>
			<include refid="report_column_list"/>
		from 
			<if test="currentSearch != null and currentSearch == 'companyType'">
				company_type as t left join company as c on(t.id=c.company_type)
			</if>
			<if test="currentSearch != null and currentSearch == 'companyEconomyType'">
				company_economy_type as et left join company as c on(et.id=c.company_economy_type)
			</if>
			<if test="currentSearch != null and currentSearch == 'area'">
				area as a left join company as c on(a.code = c.area_code)
			</if>
			left join audit as au on (c.id=au.company_id)
			left join payment as pay on(au.id = pay.audit_id)
			<!-- default searching undeleted company data -->
		where au.year = #{year,jdbcType=CHAR} and c.is_active = 0 
			<if test="currentSearch != null and currentSearch == 'companyType'">
				group by t.id 
			</if>
			<if test="currentSearch != null and currentSearch == 'companyEconomyType'">
				group by et.id 
			</if> 
			<if test="currentSearch != null and currentSearch == 'area'">
				group by a.code 
			</if>
			
	</select>
	
	<!-- retrieve company number of different audit process status -->
	<select id="retrieveAupCount" parameterType="map" resultMap="AuditTempModel">
		select  au.audit_process_status as aup_id,count(au.audit_process_status ) as num
		from 
			<if test="currentSearch != null and currentSearch == 'companyType'">
				company_type as t left join company as c on(t.id=c.company_type)
			</if>
			<if test="currentSearch != null and currentSearch == 'companyEconomyType'">
				company_economy_type as et left join company as c on(et.id=c.company_economy_type) 
			</if>
			<if test="currentSearch != null and currentSearch == 'area'">
				area as a left join company as c on(a.code = c.area_code)
			</if>
			left join audit as au on (c.id=au.company_id)
			left join payment as pay on(au.id = pay.audit_id)
		<where>
			<!-- default searching undeleted company data -->
			au.year = #{year,jdbcType=CHAR} and c.is_active = 0 
			<if test="companyType != null and companyType > 0">
				and t.id = #{companyType,jdbcType=INTEGER}
			</if>
			<if test="companyEconomyType != null and companyEconomyType > 0">
				and et.id = #{companyEconomyType,jdbcType=INTEGER} 
			</if>
			<if test="area != null and area != ''">
				and a.code  = #{area,jdbcType=CHAR}
			</if>
		
		</where>
		group by au.audit_process_status
	</select>
	
	<!-- out of date method -->
	<select id="retrieveReportByCompanyType" parameterType="java.lang.String" resultMap="ReportViewModel">
		select
			<include refid="report_column_list"/>
		from audit_company_view 
		<where>
			au_year = #{year,jdbcType=CHAR}
			<if test="companyType != null and companyType > 0">
				and t_id = #{companyType,jdbcType=INTEGER}
			</if>
			<if test="companyEconomyType != null and companyEconomyType > 0">
				and et_id = #{companyEconomyType,jdbcType=INTEGER} 
			</if>
			<if test="areaCode != null and areaCode != ''">
				and a_code  = #{areaCode,jdbcType=CHAR}
			</if>
		</where>
	</select>
	
	<!-- out of date method -->
	<select id="retrieveReportByCompanyEconomyType" parameterType="java.lang.String" resultMap="ReportViewModel">
		select et_company_economy_type as report_name,
				<include refid="report_column_list"/>
				,et_id
		from audit_company_view 
		<where>
				au_year = #{year,jdbcType=CHAR} 
		</where>
		group by et_id
	</select>
	
	<!-- out of date method -->
	<select id="retrieveReportByArea" parameterType="java.lang.String" resultMap="ReportViewModel">
		select a_name as report_name,
				<include refid="report_column_list"/>
				,a_code
		from audit_company_view 
		<where>
				au_year = #{year,jdbcType=CHAR} 
		</where>
		group by a_code
	</select>
	
	<insert id="create_5">
		create view audit_company_view as 
		select	c.id as c_id, c.company_code as c_company_code, c.company_management as c_company_management,
				c.company_name as c_company_name, c.company_legal as c_company_legal,
				c.company_contact_person as c_company_contact_person, 
				c.company_organization_code as c_company_organization_code, c.company_tax_code as c_company_tax_code,
				c.company_address as c_company_address, c.company_zip_code as c_company_zip_code, 
				c.company_fax as c_company_fax, 
				c.company_phone as c_company_phone, c.company_mobile as c_company_mobile, 
				c.company_bank as c_company_bank, c.company_bank_account as c_company_bank_account,
				c.company_remark as c_company_remark, c.create_time as c_create_time, 
				c.update_time as c_update_time, c.user_id as c_user_id, c.is_active as c_is_active, c.version as c_version,
				t.id as t_id, t.company_type as t_company_type, 
				et.id as et_id, et.company_economy_type as et_company_economy_type,
				p.id as p_id, p.company_property as p_company_property,
				a.code as a_code, a.name as a_name,
				au.id as au_id, au.year as au_year, au.company_emp_total as au_company_emp_total,
					au.company_handicap_total as au_company_handicap_total, au.company_predict_total as au_company_predict_total,
					au.company_should_total as au_company_should_total, au.company_already_total as au_company_already_total, 
					au.amount_payable as au_amount_payable, au.reduction_amount as au_reduction_amount,
					au.actual_amount as au_actual_amount,
					au.pay_amount as au_pay_amount, au.remain_amount as au_remain_amount, 
					au.complement_amount as au_complement_amount, au.delay_pay_amount as au_delay_pay_amount, 
					au.is_delay_pay as au_is_delay_pay, 
					au.init_audit_user_id as au_init_audit_user_id,  au.init_audit_date as au_init_audit_date, 
					au.init_audit_comment as au_init_audit_comment, au.verify_audit_user_id as au_verify_audit_user_id,
					au.verify_audit_date as au_verify_audit_date , au.verify_audit_comment as au_verify_audit_comment,
					au.remark as au_remark, 
					au.is_exempt as au_is_exempt,au.reduction_type as au_reduction_type,
					au.reducion_apply_user as au_reducion_apply_user, 
					au.reduction_date as au_reduction_date, au.reduction_reason as au_reduction_reason,
					au.reduction_answer_user as au_reduction_answer_user, au.reduction_answer_date as au_reduction_answer_date, 
					au.reduction_answer_option as au_reduction_answer_option, au.reduction_remark as au_reduction_remark,
					au.unaudit_years as au_unaudit_years, au.supplement_year as au_supplement_year, 
					au.delay_days as au_delay_days, au.refuse_times as au_refuse_times, 
					au.create_time as au_create_time, au.update_time as au_update_time, au.user_id as au_user_id, 
					au.is_active as au_is_active, au.version as au_version,
				aup.id as aup_id, aup.audit_process_status as aup_audit_process_status
		from audit as au 
			left join audit_process_status as aup on au.audit_process_status = aup.id 
			left join company as c on au.company_id = c.id 
			left join company_type as t on c.company_type = t.id left join company_economy_type as et on c.company_economy_type = et.id
			left join company_property as p on c.company_property = p.id left join area as a on c.area_code = a.code
		group by au.id
		order by c.company_code;
	</insert>
	
	<insert id="create_4">
		create view audit_company_view as 
		select	c.id as c_id, c.company_code as c_company_code, c.company_management as c_company_management,
				c.company_name as c_company_name, c.company_legal as c_company_legal,
				c.company_contact_person as c_company_contact_person, 
				c.company_organization_code as c_company_organization_code, c.company_tax_code as c_company_tax_code,
				c.company_address as c_company_address, c.company_zip_code as c_company_zip_code, 
				c.company_fax as c_company_fax, 
				c.company_phone as c_company_phone, c.company_mobile as c_company_mobile, 
				c.company_bank as c_company_bank, c.company_bank_account as c_company_bank_account,
				c.company_remark as c_company_remark, c.create_time as c_create_time, 
				c.update_time as c_update_time, c.user_id as c_user_id, c.is_active as c_is_active, c.version as c_version,
				t.id as t_id, t.company_type as t_company_type, 
				et.id as et_id, et.company_economy_type as et_company_economy_type,
				p.id as p_id, p.company_property as p_company_property,
				a.code as a_code, a.name as a_name,
				au.id as au_id, au.year as au_year, au.company_emp_total as au_company_emp_total,
					au.company_handicap_total as au_company_handicap_total, au.company_predict_total as au_company_predict_total,
					au.company_should_total as au_company_should_total, au.company_already_total as au_company_already_total, 
					au.amount_payable as au_amount_payable, au.reduction_amount as au_reduction_amount,
					au.actual_amount as au_actual_amount,
					au.pay_amount as au_pay_amount, au.remain_amount as au_remain_amount, 
					au.complement_amount as au_complement_amount, au.delay_pay_amount as au_delay_pay_amount, 
					au.is_delay_pay as au_is_delay_pay, 
					au.init_audit_user_id as au_init_audit_user_id,  au.init_audit_date as au_init_audit_date, 
					au.init_audit_comment as au_init_audit_comment, au.verify_audit_user_id as au_verify_audit_user_id,
					au.verify_audit_date as au_verify_audit_date , au.verify_audit_comment as au_verify_audit_comment,
					au.remark as au_remark, 
					au.is_exempt as au_is_exempt,au.reduction_type as au_reduction_type,
					au.reducion_apply_user as au_reducion_apply_user, 
					au.reduction_date as au_reduction_date, au.reduction_reason as au_reduction_reason,
					au.reduction_answer_user as au_reduction_answer_user, au.reduction_answer_date as au_reduction_answer_date, 
					au.reduction_answer_option as au_reduction_answer_option, au.reduction_remark as au_reduction_remark,
					au.unaudit_years as au_unaudit_years, au.supplement_year as au_supplement_year, 
					au.delay_days as au_delay_days, au.refuse_times as au_refuse_times, 
					au.create_time as au_create_time, au.update_time as au_update_time, au.user_id as au_user_id, 
					au.is_active as au_is_active, au.version as au_version,
				aup.id as aup_id, aup.audit_process_status as aup_audit_process_status,
				pay.id as pay_id, pay.user_id as pay_user_id, pay.is_active as pay_is_active, pay.payment_money as pay_payment_money,
				pay.payment_person as pay_payment_person, pay.payment_bill as pay_payment_bill, pay.payment_type as pay_payment_type 
		from audit as au 
			left join audit_process_status as aup on au.audit_process_status = aup.id 
			left join company as c on au.company_id = c.id 
			left join company_type as t on c.company_type = t.id left join company_economy_type as et on c.company_economy_type = et.id
			left join company_property as p on c.company_property = p.id left join area as a on c.area_code = a.code
			left join payment as pay on au.id = pay.audit_id
		group by au.id
		order by c.company_code;
	</insert>
	
	<!-- out of date method -->
	<insert id="create_3">
		create view audit_company_view as
		select 
			c.id as c_id, c.year as c_year, c.company_code as c_company_code, c.company_name as c_company_name, c.company_legal as c_company_legal,
			c.company_contact_person as c_company_contact_person, 
			c.company_organization_code as c_company_organization_code, c.company_tax_code as c_company_tax_code,
			c.company_address as c_company_address, c.company_zip_code as c_company_zip_code, 
			c.company_fax as c_company_fax, 
			c.company_phone as c_company_phone, c.company_mobile as c_company_mobile, 
			c.company_bank as c_company_bank, c.company_bank_account as c_company_bank_account,
			c.company_remark as c_company_remark, c.company_emp_total as c_company_emp_total, 
			c.company_handicap_total as c_company_handicap_total, 
			c.company_predict_total as c_company_predict_total, c.company_should_total as c_company_should_total,
			c.company_already_total as c_company_already_total, c.create_time as c_create_time, 
			c.update_time as c_update_time, c.user_id as c_user_id, c.is_active as c_is_active, c.version as c_version,
			t.id as t_id, t.company_type as t_company_type, 
			et.id as et_id, et.company_economy_type as et_company_economy_type,
			p.id as p_id, p.company_property as p_company_property,
			a.code as a_code, a.name as a_name,
			au.id as au_id, au.year as au_year, au.amount_payable as au_amount_payable, au.reduction_amount as au_reduction_amount,
				au.actual_amount as au_actual_amount,
				au.pay_amount as au_pay_amount, au.remain_amount as au_remain_amount, au.init_audit_user_id as au_init_audit_user_id, 
				au.init_audit_date as au_init_audit_date, au.verify_audit_user_id as au_verify_audit_user_id,
				au.verify_audit_date as au_verify_audit_date , au.remark as au_remark, 
				au.is_exempt as au_is_exempt,au.reduction_type as au_reduction_type,
				au.reducion_apply_user as au_reducion_apply_user, 
				au.reduction_date as au_reduction_date, au.reduction_reason as au_reduction_reason,
				au.reduction_answer_user as au_reduction_answer_user, au.reduction_answer_date as au_reduction_answer_date, 
				au.reduction_answer_option as au_reduction_answer_option, au.reduction_remark as au_reduction_remark,
				au.create_time as au_create_time, au.update_time as au_update_time, au.user_id as au_user_id, 
				au.is_active as au_is_active, au.version as au_version,
			aup.id as aup_id, aup.audit_process_status as aup_audit_process_status 
		from company as c, company_type as t, company_economy_type as et, company_property as p, area as a, audit as au, audit_process_status as aup 
		where c.company_type = t.id and c.company_economy_type = et.id and c.company_property = p.id and c.area_code = a.code and c.company_code = au.company_code and c.year = au.year and au.audit_process_status = aup.id
	</insert>
	
	<!-- out of date method -->
	<insert id="create_2">
		select 
			c.id as c_id, c.year as c_year, c.company_code as c_company_code, c.company_name as c_company_name, c.company_legal as c_company_legal,
				c.company_contact_person as c_company_contact_person, 
				c.company_organization_code as c_company_organization_code, c.company_tax_code as c_company_tax_code,
				c.company_address as c_company_address, c.company_zip_code as c_company_zip_code, 
				c.company_phone as c_company_phone, c.company_mobile as c_company_mobile, 
				c.company_bank as c_company_bank, c.company_bank_account as c_company_bank_account,
				c.company_remark as c_company_remark, 
			t.id as t_id, t.company_type as t_company_type, 
			et.id as et_id, et.company_economy_type as et_company_economy_type,
			p.id as p_id, p.company_property as p_company_property,
			a.code as a_code, a.name as a_name,
			au.id as au_id, au.year as au_year, au.amount_payable as au_amount_payable, au.reduction_amount as au_reduction_amount,
				au.actual_amount as au_actual_amount,
				au.pay_amount as au_pay_amount, au.remain_amount as au_remain_amount, au.init_audit_user_id as au_init_audit_user_id, 
				au.init_audit_date as au_init_audit_date, au.verify_audit_user_id as au_verify_audit_user_id,
				au.verify_audit_date as au_verify_audit_date , au.remark as au_remark, 
				au.is_exempt as au_is_exempt,au.reduction_type as au_reduction_type,
				au.reducion_apply_user as au_reducion_apply_user, 
				au.reduction_date as au_reduction_date, au.reduction_reason as au_reduction_reason,
				au.reduction_answer_user as au_reduction_answer_user, au.reduction_answer_date as au_reduction_answer_date, 
				au.reduction_answer_option as au_reduction_answer_option, au.reduction_remark as au_reduction_remark,
				au.create_time as au_create_time, au.update_time as au_update_time, au.user_id as au_user_id, 
				au.is_active as au_is_active, au.version as au_version,
			aup.id as aup_id, aup.audit_process_status as aup_audit_process_status,
			pay.id as pay_id, pay.create_time as pay_create_time,
				pay.update_time as pay_update_time,pay.user_id as pay_user_id,
				pay.is_active as pay_is_active,pay.payment_date as pay_payment_date,
				pay.payment_money as pay_payment_money,pay.remark as pay_remark,
				pay.audit_id as pay_audit_id,pay.version as pay_version,
			u.id as u_id, u.user_name as u_user_name, u.user_real_name as u_user_real_name,
				u.user_password as u_user_password, u.user_email as u_user_email,
				u.user_mobile as u_user_mobile, u.user_phone as
				u_user_phone, u.user_status as u_user_status
		from company as c, company_type as t, company_economy_type as et, company_property as p, area as a, audit as au, audit_process_status as aup, payment as pay, user as u
		where c.company_type = t.id and c.company_economy_type = et.id and c.company_property = p.id and c.area_code = a.code and c.company_code = au.company_code and c.year = au.year and au.audit_process_status = aup.id and au.id = pay.audit_id and pay.payment_person = u.id
		group by au.id
	</insert>
	
	<!-- out of date method -->
	<insert id="create_1">
		pay_id, pay_create_time, pay_update_time, pay_user_id,
			pay_is_active, pay_payment_date, pay_payment_money, pay_remark,
			pay_audit_id, pay_version,
		u_id, u_user_name, u_user_real_name, u_user_password, u_user_email,
			u_user_mobile, u_user_phone, u_user_status
	</insert>
	
	<!-- out of date -->
	<sql id="xxx Base_Column_List">
		c_id, c_company_code, c_company_management,c_company_name, c_company_legal, c_company_contact_person, 
			c_company_organization_code, c_company_tax_code, c_company_address, c_company_zip_code, 
			c_company_phone, c_company_fax, c_company_mobile, c_company_bank, c_company_bank_account,
			c_company_remark, c_create_time, c_update_time, c_user_id, c_is_active, c_version,
		t_id, t_company_type, 
		et_id, et_company_economy_type,
		p_id, p_company_property,
		a_code, a_name,
		au_id, au_year, au_company_emp_total, au_company_handicap_total, 
			au_company_predict_total, au_company_should_total,
			au_company_already_total,
			au_amount_payable, au_reduction_amount, au_actual_amount,
			au_pay_amount, au_remain_amount, au_complement_amount, au_delay_pay_amount,
			au_is_delay_pay, au_init_audit_user_id, au_init_audit_date, au_init_audit_comment,
			au_verify_audit_user_id, au_verify_audit_date, au_verify_audit_comment, au_remark, au_is_exempt, 
			au_reduction_type, au_reducion_apply_user, au_reduction_date, au_reduction_reason,
			au_reduction_answer_user, au_reduction_answer_date, 
			au_reduction_answer_option, au_reduction_remark, au_unaudit_years, au_supplement_year,
			au_delay_days, au_refuse_times, 
			au_create_time,au_update_time, au_user_id, 
			au_is_active, au_version,
		aup_id, aup_audit_process_status
	</sql>
	
	<!-- out of date -->
	<sql id="xxx From_condition_list">
		company as c, company_type as t, company_economy_type as et, company_property as p, area as a, audit as au, audit_process_status as aup 
	</sql>
	
	<!-- out of date -->
	<sql id="xxx Where_condition_list">
		c.company_type = t.id and c.company_economy_type = et.id and c.company_property = p.id and c.area_code = a.code and c.company_code = au.company_code and c.year = au.year and au.audit_process_status = aup.id   
	</sql>
	
</mapper>