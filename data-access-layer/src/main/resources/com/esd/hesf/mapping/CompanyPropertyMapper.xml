<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.hesf.dao.CompanyPropertyDao">

	<resultMap id="BaseResultMap" type="com.esd.hesf.model.CompanyProperty">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="company_property" property="companyProperty"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="is_active" property="isActive" jdbcType="BIT" />
		<result column="version" property="version" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, company_property, create_time, update_time, is_active, user_id, version
	</sql>

	<!-- insert -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.esd.hesf.model.CompanyProperty">
		<selectKey resultType="java.lang.Integer" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into company_property
		(company_property, create_time,
		update_time, is_active, user_id, version )
		values
		(#{companyProperty,jdbcType=VARCHAR}, now(),now(),
		#{isActive,jdbcType=BIT},
		#{userId,jdbcType=INTEGER}, default)
	</insert>

	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.esd.hesf.model.CompanyProperty">
		<selectKey resultType="java.lang.Integer" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into company_property
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="companyProperty != null">
				company_property,
			</if>
			create_time, update_time,
			<if test="isActive != null">
				is_active,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			version
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="companyProperty != null">
				#{companyProperty,jdbcType=VARCHAR},
			</if>
			now(),now(),
			<if test="isActive != null">
				#{isActive,jdbcType=BIT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			default
		</trim>
	</insert>

	<!-- delete -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		company_property
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<!-- update -->
	<update id="updateByPrimaryKey" parameterType="com.esd.hesf.model.CompanyProperty">
		update company_property
		<set>
			update_time = now(),
			<if test="isActive != null">
				is_active = #{isActive,jdbcType=BIT},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER} 
	</update>

	<!-- retrieve -->
	<select id="retrieveByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from company_property
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="retrieveByPage" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from company_property
		<trim prefix="where" prefixOverrides="and|or">
			<if test="companyProperty != null">
				<if
					test="companyProperty.companyProperty != null and companyProperty.companyProperty != ''">
					companyProperty = #{companyProperty.companyProperty}
				</if>
				<if test="companyProperty.userId != null and companyProperty.userId > 0">
					and user_id = #{companyProperty.userId}
				</if>
				<if test="companyType.isActive != null">
					and is_active = #{companyProperty.isActive}
				</if>
			</if>
		</trim>
		limit #{start}, #{size}
	</select>
</mapper>